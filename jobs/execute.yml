parameters:
  - name: tfvars
    type: string
  - name: tfModulePath
    type: string
  - name: tfVersion
    type: string
  - name: azServiceConnection
    type: string
  - name: tfStateAzSaRG
    type: string
  - name: tfStateAzSa
    type: string
  - name: tfStateAzSaCont
    type: string
  - name: tfStateName
    type: string
  - name: env
    type: string
  - name: app
    type: string

jobs:
  - job: apply
    displayName: Manage infrastructure with terraform
    pool:
      name: ubuntu-docker
    steps:
      - template: ../steps/tf-init.yml
        parameters:
          tfModulePath: "${{ parameters.tfModulePath }}"
          tfVersion: "${{ parameters.tfVersion }}"
          azServiceConnection: "${{ parameters.azServiceConnection }}"
          tfStateAzSaRG: "${{ parameters.tfStateAzSaRG }}"
          tfStateAzSa: "${{ parameters.tfStateAzSa }}"
          tfStateAzSaCont: "${{ parameters.tfStateAzSaCont }}"
          tfStateName: "${{ parameters.tfStateName }}"
          tfenv: "${{ parameters.env }}"
          app: "${{ parameters.app }}"

      - ${{ if or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.Reason'], 'PullRequest')) }}:
        - template: ../steps/tf-validate.yml
          parameters:
            azServiceConnection: "${{ parameters.azServiceConnection }}"
            tfvars: "${{ parameters.tfvars }}"

      - template: ../steps/tf-plan.yml
        parameters:
          azServiceConnection: "${{ parameters.azServiceConnection }}"
          tfvars: "${{ parameters.tfvars }}"
          ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/delete') }}:
            tfaction: '-destroy'
          ${{ else }}:
            tfaction: ''

      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/delete') }}:
        - template: ../steps/tf-destroy.yml
          parameters:
            azServiceConnection: "${{ parameters.azServiceConnection }}"
            tfvars: "${{ parameters.tfvars }}"
        ${{ else }}:
        - template: ../steps/tf-apply.yml
          parameters:
            azServiceConnection: "${{ parameters.azServiceConnection }}"
            tfvars: "${{ parameters.tfvars }}"
parameters:
  - name: tfModulePath
    type: string
  - name: tfVersion
    type: string
  - name: azServiceConnection
    type: string
  - name: tfStateAzSaRG
    type: string
  - name: tfStateAzSa
    type: string
  - name: tfStateAzSaCont
    type: string
  - name: tfStateName
    type: string
  - name: env
    type: string
  - name: app
    type: string

jobs:
  - job: Validate
    pool:
      name: ubuntu-docker
    steps:
      - template: ../steps/tf-init.yml
        parameters:
          tfModulePath: "${{ parameters.tfModulePath }}"
          tfVersion: "${{ parameters.tfVersion }}"
          azServiceConnection: "${{ parameters.azServiceConnection }}"
          tfStateAzSaRG: "${{ parameters.tfStateAzSaRG }}"
          tfStateAzSa: "${{ parameters.tfStateAzSa }}"
          tfStateAzSaCont: "${{ parameters.tfStateAzSaCont }}"
          tfStateName: "${{ parameters.tfStateName }}"
          env: "${{ parameters.env }}"
          app: "${{ parameters.app }}"

      - task: TerraformTaskV4@4
        displayName: Check whether the terraform code is valid
        inputs:
          provider: 'azurerm'
          command: 'validate'
          environmentServiceNameAzureRM: "${{ parameters.azServiceConnection }}"

      - task: TerraformTaskV4@4
        displayName: Check if the terraform code is formatted
        inputs:
          provider: 'azurerm'
          command: 'custom'
          commandOptions: 'fmt -check  -recursive'
          environmentServiceNameAzureRM: "${{ parameters.azServiceConnection }}"
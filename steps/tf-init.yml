parameters:
  - name: tfModulePath
    type: string
  - name: tfVersion
    type: string
  - name: azServiceConnection
    type: string
  - name: tfStateAzSaRG
    type: string
  - name: tfStateAzSa
    type: string
  - name: tfStateAzSaCont
    type: string
  - name: tfStateName
    type: string
  - name: tfenv
    type: string
  - name: app
    type: string

steps:
  - checkout: self

  - task: TerraformInstaller@1
    displayName: Install Terraform
    inputs:
      terraformVersion: "${{ parameters.tfVersion }}"

#  - task: Bash@3
#    inputs:
#      targetType: 'inline'
#      script: echo "${TF_WORKSPACE}"
#    env:
#      TF_WORKSPACE: "${{ parameters.tfenv }}${{ parameters.app }}"

  - task: TerraformTaskV4@4
    displayName: Initialize Terraform in the working directory
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: "${{ parameters.azServiceConnection }}"
      backendAzureRmResourceGroupName: "${{ parameters.tfStateAzSaRG }}"
      backendAzureRmStorageAccountName: "${{ parameters.tfStateAzSa }}"
      backendAzureRmContainerName: "${{ parameters.tfStateAzSaCont }}"
      backendAzureRmKey: "${{ parameters.tfenv }}-${{ parameters.app }}-${{ parameters.tfStateName }}"
      workingDirectory: "${{ parameters.tfModulePath }}"
      reconfigureBackend: true
    env:
      TF_WORKSPACE: "${{ parameters.tfenv }}${{ parameters.app }}"
